sourceSets.main.java.srcDirs = [ "src/" ]

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

configurations { natives }

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

sourceSets.main.java.srcDirs = [ "src/" ]

ext {
    mainClassName = "de.longri.cachebox3.IOS_Launcher"
}

launchIPhoneSimulator.dependsOn build
launchIPadSimulator.dependsOn build
launchIOSDevice.dependsOn build
createIPA.dependsOn build

robovm {
    archs = "thumbv7:arm64"
}

// called every time gradle gets executed, takes the native dependencies of
// the natives configuration, and extracts them to the proper build/ folders
// so they get packed with the IPA.
task copyNatives() {
    println 'create build natvie directory'
    file("build/native/").mkdirs();

    println 'start copyNatives'
    configurations.natives.files.each { jar ->
        def outputDir = null
        print 'file: '
        println jar.name
        if (jar.name.endsWith("natives.jar")) outputDir = file("build/native/")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
            }
        }

        if (jar.name.endsWith("natives-ios.jar")) outputDir = file("build/native/")
        if (outputDir != null) {
            copy {
                from zipTree(jar)
                into outputDir
            }
        }

    }
    println 'finish copyNatives'
    println 'start copySvg'
    //override Svggh lib
    copy {
        from file("svggh/")
        into file("build/native/")
    }
    println 'finish copySvg'
}

copyNatives.dependsOn classes
